  Moc'ing MeshSubdivision_Debug.h...
  Moc'ing CommandProcessor.h...
  CameraSynchronization.cpp
  ChangeLayout.cpp
  Command.cpp
  CommandProcessor.cpp
  EventFilter.cpp
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 ChangeLayout.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 CameraSynchronization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ChangeLayout.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 CameraSynchronization.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\numeric(110): warning C4996: 'std::inner_product::_Unchecked_iterators::_Deprecate': Call to 'std::inner_product' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 CommandProcessor.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\numeric(110): note: 参见“std::inner_product::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 CommandProcessor.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\numeric(139): note: 参见对正在编译的函数 模板 实例化“_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn21,_Fn22)”的引用
          with
          [
              _Ty=float,
              _InIt1=const float *,
              _InIt2=const float *,
              _Fn21=std::plus<void>,
              _Fn22=std::multiplies<void>
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\geometry\Vector11T.hh(386): note: 参见对正在编译的函数 模板 实例化“_Ty std::inner_product<const Scalar*,const Scalar*,Scalar>(_InIt1,_InIt1,_InIt2,_Ty)”的引用
          with
          [
              _Ty=float,
              Scalar=float,
              _InIt1=const float *,
              _InIt2=const float *
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\geometry\Vector11T.hh(700): note: 参见对正在编译的函数 模板 实例化“Scalar OpenMesh::VectorT<Scalar,3>::operator |<float>(const OpenMesh::VectorT<Scalar,3> &) const”的引用
          with
          [
              Scalar=float
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\geometry\Vector11T.hh(700): note: 参见对正在编译的函数 模板 实例化“Scalar OpenMesh::VectorT<Scalar,3>::operator |<float>(const OpenMesh::VectorT<Scalar,3> &) const”的引用
          with
          [
              Scalar=float
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\mesh\PolyMeshT.cc(363): note: 参见对正在编译的函数 模板 实例化“Scalar OpenMesh::dot<float,3>(const OpenMesh::VectorT<Scalar,3> &,const OpenMesh::VectorT<Scalar,3> &)”的引用
          with
          [
              Scalar=float
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\mesh\PolyMeshT.cc(343): note: 编译类 模板 成员函数“bool OpenMesh::PolyMeshT<Kernel>::is_estimated_feature_edge(OpenMesh::HalfedgeHandle,const double) const”时
          with
          [
              Kernel=OpenMesh::AttribKernelT<OpenMesh::FinalMeshItemsT<OpenMesh::DefaultTraits,true>,OpenMesh::TriConnectivity>
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\mesh\PolyMeshT.cc(300): note: 参见对正在编译的函数 模板 实例化“bool OpenMesh::PolyMeshT<Kernel>::is_estimated_feature_edge(OpenMesh::HalfedgeHandle,const double) const”的引用
          with
          [
              Kernel=OpenMesh::AttribKernelT<OpenMesh::FinalMeshItemsT<OpenMesh::DefaultTraits,true>,OpenMesh::TriConnectivity>
          ] (编译源文件 CommandProcessor.cpp)
  c:\program files\openmesh 6.3\include\openmesh\core\mesh\TriMeshT.cc(80): note: 编译类 模板 成员函数“OpenMesh::VectorT<float,3> OpenMesh::TriMeshT<OpenMesh::AttribKernelT<OpenMesh::FinalMeshItemsT<Traits,true>,OpenMesh::TriConnectivity>>::calc_face_normal(OpenMesh::FaceHandle) const”时
          with
          [
              Traits=OpenMesh::DefaultTraits
          ] (编译源文件 CommandProcessor.cpp)
  C:\Program Files\OpenMesh 6.3\include\OpenMesh\Core\Mesh\TriMesh_ArrayKernelT.hh(100): note: 参见对正在编译的类 模板 实例化“OpenMesh::TriMeshT<OpenMesh::AttribKernelT<OpenMesh::FinalMeshItemsT<Traits,true>,OpenMesh::TriConnectivity>>”的引用
          with
          [
              Traits=OpenMesh::DefaultTraits
          ] (编译源文件 CommandProcessor.cpp)
  D:\Visual Studio 2015\MeshSubdivision_Debug\KeypointDetector\KeypointDetector.h(21): note: 参见对正在编译的类 模板 实例化“OpenMesh::TriMesh_ArrayKernelT<OpenMesh::DefaultTraits>”的引用 (编译源文件 CommandProcessor.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 EventFilter.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 EventFilter.cpp)
  Initialization.cpp
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 CameraSynchronization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ChangeLayout.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 CameraSynchronization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ChangeLayout.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 Initialization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 Initialization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 EventFilter.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 EventFilter.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 Initialization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 Initialization.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 ChangeLayout.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ChangeLayout.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 ChangeLayout.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 CameraSynchronization.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 CameraSynchronization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 CameraSynchronization.cpp)
  LoadMesh.cpp
  MeshSubdivision_Debug.cpp
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 EventFilter.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 EventFilter.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 EventFilter.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 MeshSubdivision_Debug.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 Initialization.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 Initialization.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 Initialization.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 MeshSubdivision_Debug.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 LoadMesh.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 LoadMesh.cpp)
  OutputTextEdit.cpp
  ShowOrClear.cpp
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 OutputTextEdit.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 OutputTextEdit.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 ShowOrClear.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ShowOrClear.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 MeshSubdivision_Debug.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 LoadMesh.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 LoadMesh.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 MeshSubdivision_Debug.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 OutputTextEdit.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 OutputTextEdit.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ShowOrClear.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ShowOrClear.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 MeshSubdivision_Debug.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 LoadMesh.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 LoadMesh.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 LoadMesh.cpp)
  ThreadDataCommunication.cpp
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 OutputTextEdit.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 OutputTextEdit.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 OutputTextEdit.cpp)
  main.cpp
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 ThreadDataCommunication.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ThreadDataCommunication.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 ShowOrClear.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ShowOrClear.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 ShowOrClear.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 main.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 main.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ThreadDataCommunication.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 ThreadDataCommunication.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 main.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 main.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 ThreadDataCommunication.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 ThreadDataCommunication.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 main.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 main.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 main.cpp)
  moc_CommandProcessor.cpp
  moc_MeshSubdivision_Debug.cpp
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/pcl_macros.h(72): note: 命令行参数: 参见前面的“_USE_MATH_DEFINES”定义 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl\visualization\pcl_visualizer.h(1618): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators' (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ] (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用 (编译源文件 .\GeneratedFiles\Debug\moc_MeshSubdivision_Debug.cpp)
  MeshSubdivision_Debug.vcxproj -> D:\Visual Studio 2015\MeshSubdivision_Debug\x64\Debug\MeshSubdivision_Debug.exe
  MeshSubdivision_Debug.vcxproj -> D:\Visual Studio 2015\MeshSubdivision_Debug\x64\Debug\MeshSubdivision_Debug.pdb (Full PDB)
